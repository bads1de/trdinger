"""Remove bayesian_optimization_results table

Revision ID: 456184cea2b7
Revises: b845baffd21c
Create Date: 2025-07-21 16:45:25.111025

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = '456184cea2b7'
down_revision: Union[str, None] = 'b845baffd21c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_bayesian_created_at', table_name='bayesian_optimization_results')
    op.drop_index('idx_bayesian_is_active', table_name='bayesian_optimization_results')
    op.drop_index('idx_bayesian_is_default', table_name='bayesian_optimization_results')
    op.drop_index('idx_bayesian_model_type', table_name='bayesian_optimization_results')
    op.drop_index('idx_bayesian_optimization_type', table_name='bayesian_optimization_results')
    op.drop_index('idx_bayesian_profile_name', table_name='bayesian_optimization_results')
    op.drop_index('idx_bayesian_target_model_type', table_name='bayesian_optimization_results')
    op.drop_index('ix_bayesian_optimization_results_model_type', table_name='bayesian_optimization_results')
    op.drop_index('ix_bayesian_optimization_results_optimization_type', table_name='bayesian_optimization_results')
    op.drop_index('ix_bayesian_optimization_results_target_model_type', table_name='bayesian_optimization_results')
    op.drop_table('bayesian_optimization_results')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bayesian_optimization_results',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('profile_name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('optimization_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('model_type', sa.VARCHAR(length=50), nullable=True),
    sa.Column('experiment_name', sa.VARCHAR(length=255), nullable=True),
    sa.Column('best_params', sqlite.JSON(), nullable=False),
    sa.Column('best_score', sa.FLOAT(), nullable=False),
    sa.Column('total_evaluations', sa.INTEGER(), nullable=False),
    sa.Column('optimization_time', sa.FLOAT(), nullable=False),
    sa.Column('convergence_info', sqlite.JSON(), nullable=False),
    sa.Column('optimization_history', sqlite.JSON(), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=False),
    sa.Column('is_default', sa.BOOLEAN(), nullable=False),
    sa.Column('target_model_type', sa.VARCHAR(length=50), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('profile_name')
    )
    op.create_index('ix_bayesian_optimization_results_target_model_type', 'bayesian_optimization_results', ['target_model_type'], unique=False)
    op.create_index('ix_bayesian_optimization_results_optimization_type', 'bayesian_optimization_results', ['optimization_type'], unique=False)
    op.create_index('ix_bayesian_optimization_results_model_type', 'bayesian_optimization_results', ['model_type'], unique=False)
    op.create_index('idx_bayesian_target_model_type', 'bayesian_optimization_results', ['target_model_type'], unique=False)
    op.create_index('idx_bayesian_profile_name', 'bayesian_optimization_results', ['profile_name'], unique=False)
    op.create_index('idx_bayesian_optimization_type', 'bayesian_optimization_results', ['optimization_type'], unique=False)
    op.create_index('idx_bayesian_model_type', 'bayesian_optimization_results', ['model_type'], unique=False)
    op.create_index('idx_bayesian_is_default', 'bayesian_optimization_results', ['is_default'], unique=False)
    op.create_index('idx_bayesian_is_active', 'bayesian_optimization_results', ['is_active'], unique=False)
    op.create_index('idx_bayesian_created_at', 'bayesian_optimization_results', ['created_at'], unique=False)
    # ### end Alembic commands ###
