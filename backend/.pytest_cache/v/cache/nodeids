[
  "tests/integration/test_backtest_error_handling_with_real_data.py::TestBacktestErrorHandlingWithRealData::test_invalid_date_range_handling",
  "tests/integration/test_backtest_error_handling_with_real_data.py::TestBacktestErrorHandlingWithRealData::test_invalid_financial_parameters",
  "tests/integration/test_backtest_error_handling_with_real_data.py::TestBacktestErrorHandlingWithRealData::test_invalid_strategy_parameters",
  "tests/integration/test_backtest_with_db.py::test_backtest_with_real_data",
  "tests/integration/test_backtesting_py_integration.py::TestBacktestingPyIntegration::test_backtest_performance_metrics",
  "tests/integration/test_backtesting_py_integration.py::TestBacktestingPyIntegration::test_backtest_with_insufficient_data",
  "tests/integration/test_backtesting_py_integration.py::TestBacktestingPyIntegration::test_equity_curve_and_trades_data",
  "tests/integration/test_backtesting_py_integration.py::TestBacktestingPyIntegration::test_sma_cross_strategy_basic_execution",
  "tests/integration/test_backtesting_py_integration.py::TestBacktestingPyIntegration::test_sma_cross_strategy_optimization",
  "tests/integration/test_backtesting_py_integration.py::TestBacktestingPyIntegration::test_sma_cross_strategy_with_custom_parameters",
  "tests/integration/test_backtesting_py_integration.py::TestBacktestingPyIntegration::test_sma_indicator_calculation",
  "tests/integration/test_backtesting_py_integration.py::TestBacktestingPyIntegration::test_strategy_with_real_market_conditions",
  "tests/integration/test_bybit_api_integration.py::TestBybitAPIIntegration::test_data_consistency_real_api",
  "tests/integration/test_bybit_api_integration.py::TestBybitAPIIntegration::test_error_handling_invalid_symbol_real_api",
  "tests/integration/test_bybit_api_integration.py::TestBybitAPIIntegration::test_error_handling_invalid_timeframe_real_api",
  "tests/integration/test_bybit_api_integration.py::TestBybitAPIIntegration::test_fetch_all_major_symbols_real_api",
  "tests/integration/test_bybit_api_integration.py::TestBybitAPIIntegration::test_fetch_different_timeframes_real_api",
  "tests/integration/test_bybit_api_integration.py::TestBybitAPIIntegration::test_rate_limiting_handling_real_api",
  "tests/integration/test_bybit_api_integration.py::TestBybitAPIPerformance::test_concurrent_requests_performance",
  "tests/integration/test_bybit_api_integration.py::TestBybitAPIPerformance::test_response_time_performance",
  "tests/integration/test_bybit_api_integration.py::TestBybitDatabaseIntegration::test_bulk_data_operations_not_implemented",
  "tests/integration/test_bybit_api_integration.py::TestBybitDatabaseIntegration::test_data_persistence_not_implemented",
  "tests/integration/test_bybit_api_integration.py::TestBybitDatabaseIntegration::test_database_connection_not_implemented",
  "tests/integration/test_bybit_api_integration.py::TestBybitDatabaseIntegration::test_fetch_and_save_to_database_not_implemented",
  "tests/integration/test_comprehensive_backtest_with_real_data.py::TestComprehensiveBacktestWithRealData::test_basic_sma_cross_strategy_btc_usdt",
  "tests/integration/test_comprehensive_backtest_with_real_data.py::TestComprehensiveBacktestWithRealData::test_commission_impact_analysis",
  "tests/integration/test_comprehensive_backtest_with_real_data.py::TestComprehensiveBacktestWithRealData::test_data_availability",
  "tests/integration/test_comprehensive_backtest_with_real_data.py::TestComprehensiveBacktestWithRealData::test_data_quality_validation",
  "tests/integration/test_comprehensive_backtest_with_real_data.py::TestComprehensiveBacktestWithRealData::test_data_standardization_with_real_data",
  "tests/integration/test_comprehensive_backtest_with_real_data.py::TestComprehensiveBacktestWithRealData::test_different_symbols_comparison",
  "tests/integration/test_comprehensive_backtest_with_real_data.py::TestComprehensiveBacktestWithRealData::test_edge_cases_with_real_data",
  "tests/integration/test_comprehensive_backtest_with_real_data.py::TestComprehensiveBacktestWithRealData::test_long_term_strategy_performance",
  "tests/integration/test_comprehensive_backtest_with_real_data.py::TestComprehensiveBacktestWithRealData::test_parameter_optimization_with_real_data",
  "tests/integration/test_comprehensive_backtest_with_real_data.py::TestComprehensiveBacktestWithRealData::test_performance_metrics_accuracy",
  "tests/integration/test_comprehensive_backtest_with_real_data.py::TestComprehensiveBacktestWithRealData::test_runner_integration_with_real_data",
  "tests/integration/test_data_collection.py::test_data_collection",
  "tests/integration/test_funding_rate_api.py::TestBybitFundingRateAPI::test_bulk_funding_rate_collection_btc",
  "tests/integration/test_funding_rate_api.py::TestBybitFundingRateAPI::test_bulk_funding_rate_collection_btc_eth",
  "tests/integration/test_funding_rate_api.py::TestBybitFundingRateAPI::test_eth_funding_rate_service_pagination",
  "tests/integration/test_funding_rate_api.py::TestBybitFundingRateAPI::test_fetch_current_funding_rate",
  "tests/integration/test_funding_rate_api.py::TestBybitFundingRateAPI::test_fetch_funding_rate_history",
  "tests/integration/test_funding_rate_api.py::TestBybitFundingRateAPI::test_funding_rate_data_structure_validation",
  "tests/integration/test_funding_rate_api.py::TestBybitFundingRateAPI::test_funding_rate_history_200_limit",
  "tests/integration/test_funding_rate_api.py::TestBybitFundingRateAPI::test_funding_rate_history_pagination_concept",
  "tests/integration/test_funding_rate_api.py::TestBybitFundingRateAPI::test_funding_rate_history_reverse_pagination",
  "tests/integration/test_funding_rate_api.py::TestBybitFundingRateAPI::test_funding_rate_service_with_database_integration",
  "tests/integration/test_funding_rate_api.py::TestBybitFundingRateAPI::test_improved_funding_rate_service_pagination",
  "tests/integration/test_funding_rate_api.py::TestBybitFundingRateAPI::test_multiple_symbols_funding_rates",
  "tests/integration/test_market_data_api.py::TestMarketDataAPI::test_health_check_endpoint",
  "tests/integration/test_market_data_api.py::TestMarketDataAPI::test_ohlcv_endpoint_default_parameters",
  "tests/integration/test_market_data_api.py::TestMarketDataAPI::test_ohlcv_endpoint_invalid_limit",
  "tests/integration/test_market_data_api.py::TestMarketDataAPI::test_ohlcv_endpoint_invalid_symbol",
  "tests/integration/test_market_data_api.py::TestMarketDataAPI::test_ohlcv_endpoint_invalid_timeframe",
  "tests/integration/test_market_data_api.py::TestMarketDataAPI::test_ohlcv_endpoint_missing_symbol",
  "tests/integration/test_market_data_api.py::TestMarketDataAPI::test_ohlcv_endpoint_response_format",
  "tests/integration/test_market_data_api.py::TestMarketDataAPI::test_ohlcv_endpoint_success",
  "tests/integration/test_market_data_api.py::TestMarketDataAPI::test_ohlcv_endpoint_symbol_normalization",
  "tests/integration/test_open_interest_api.py::TestBybitOpenInterestAPI::test_bybit_has_open_interest_methods",
  "tests/integration/test_open_interest_api.py::TestBybitOpenInterestAPI::test_fetch_current_open_interest",
  "tests/integration/test_open_interest_api.py::TestBybitOpenInterestAPI::test_fetch_open_interest_multiple_symbols",
  "tests/integration/test_open_interest_api.py::TestBybitOpenInterestAPI::test_open_interest_data_consistency",
  "tests/integration/test_open_interest_api.py::TestBybitOpenInterestAPI::test_open_interest_data_structure_analysis",
  "tests/integration/test_open_interest_api.py::TestBybitOpenInterestAPI::test_open_interest_error_handling",
  "tests/integration/test_open_interest_api.py::TestBybitOpenInterestAPI::test_open_interest_history_availability",
  "tests/integration/test_open_interest_service.py::TestBybitOpenInterestService::test_data_structure_consistency",
  "tests/integration/test_open_interest_service.py::TestBybitOpenInterestService::test_error_handling",
  "tests/integration/test_open_interest_service.py::TestBybitOpenInterestService::test_fetch_all_open_interest_history_sample",
  "tests/integration/test_open_interest_service.py::TestBybitOpenInterestService::test_fetch_and_save_open_interest_data",
  "tests/integration/test_open_interest_service.py::TestBybitOpenInterestService::test_fetch_current_open_interest",
  "tests/integration/test_open_interest_service.py::TestBybitOpenInterestService::test_fetch_open_interest_history",
  "tests/integration/test_open_interest_service.py::TestBybitOpenInterestService::test_normalize_symbol",
  "tests/integration/test_open_interest_service.py::TestBybitOpenInterestService::test_parameter_validation",
  "tests/integration/test_open_interest_service.py::TestBybitOpenInterestService::test_repository_methods",
  "tests/integration/test_open_interest_service.py::TestBybitOpenInterestService::test_save_open_interest_to_database",
  "tests/integration/test_run.py::test_health_check_response_body",
  "tests/integration/test_run.py::test_health_check_status_code",
  "tests/integration/test_unified_backtest_system.py::TestUnifiedBacktestSystem::test_backtest_service_with_standardized_data",
  "tests/integration/test_unified_backtest_system.py::TestUnifiedBacktestSystem::test_data_standardization",
  "tests/integration/test_unified_backtest_system.py::TestUnifiedBacktestSystem::test_data_validation_edge_cases",
  "tests/integration/test_unified_backtest_system.py::TestUnifiedBacktestSystem::test_error_handling",
  "tests/integration/test_unified_backtest_system.py::TestUnifiedBacktestSystem::test_legacy_config_conversion",
  "tests/integration/test_unified_backtest_system.py::TestUnifiedBacktestSystem::test_performance_comparison",
  "tests/integration/test_unified_backtest_system.py::TestUnifiedBacktestSystem::test_runner_with_new_implementation",
  "tests/integration/test_with_sample_data.py::test_database_operations",
  "tests/performance/test_backtest_performance_with_real_data.py::TestBacktestPerformanceWithRealData::test_large_dataset_performance",
  "tests/performance/test_backtest_performance_with_real_data.py::TestBacktestPerformanceWithRealData::test_medium_dataset_performance",
  "tests/performance/test_backtest_performance_with_real_data.py::TestBacktestPerformanceWithRealData::test_small_dataset_performance",
  "tests/test_indicators.py::TestTechnicalIndicators::test_bollinger_bands_calculation",
  "tests/test_indicators.py::TestTechnicalIndicators::test_calculate_indicator_macd",
  "tests/test_indicators.py::TestTechnicalIndicators::test_calculate_indicator_rsi",
  "tests/test_indicators.py::TestTechnicalIndicators::test_calculate_indicator_sma",
  "tests/test_indicators.py::TestTechnicalIndicators::test_macd_calculation",
  "tests/test_indicators.py::TestTechnicalIndicators::test_rsi_calculation",
  "tests/test_indicators.py::TestTechnicalIndicators::test_sma_calculation",
  "tests/test_indicators.py::TestTechnicalIndicators::test_unsupported_indicator",
  "tests/test_market_data_api.py::TestMarketDataAPI::test_health_check_endpoint",
  "tests/test_market_data_api.py::TestMarketDataAPI::test_ohlcv_endpoint_default_parameters",
  "tests/test_market_data_api.py::TestMarketDataAPI::test_ohlcv_endpoint_invalid_limit",
  "tests/test_market_data_api.py::TestMarketDataAPI::test_ohlcv_endpoint_invalid_symbol",
  "tests/test_market_data_api.py::TestMarketDataAPI::test_ohlcv_endpoint_invalid_timeframe",
  "tests/test_market_data_api.py::TestMarketDataAPI::test_ohlcv_endpoint_missing_symbol",
  "tests/test_market_data_api.py::TestMarketDataAPI::test_ohlcv_endpoint_response_format",
  "tests/test_market_data_api.py::TestMarketDataAPI::test_ohlcv_endpoint_success",
  "tests/test_market_data_api.py::TestMarketDataAPI::test_ohlcv_endpoint_symbol_normalization",
  "tests/test_market_data_service.py::TestBybitMarketDataService::test_data_freshness",
  "tests/test_market_data_service.py::TestBybitMarketDataService::test_fetch_ohlcv_data_invalid_limit",
  "tests/test_market_data_service.py::TestBybitMarketDataService::test_fetch_ohlcv_data_invalid_symbol",
  "tests/test_market_data_service.py::TestBybitMarketDataService::test_fetch_ohlcv_data_invalid_timeframe",
  "tests/test_market_data_service.py::TestBybitMarketDataService::test_fetch_ohlcv_data_success",
  "tests/test_market_data_service.py::TestBybitMarketDataService::test_network_error_handling",
  "tests/test_market_data_service.py::TestBybitMarketDataService::test_service_initialization",
  "tests/test_market_data_service.py::TestBybitMarketDataService::test_symbol_normalization",
  "tests/test_market_data_service.py::TestMarketDataConfig::test_limit_validation",
  "tests/test_market_data_service.py::TestMarketDataConfig::test_symbol_normalization",
  "tests/test_market_data_service.py::TestMarketDataConfig::test_timeframe_validation",
  "tests/test_strategy_executor.py::TestStrategyExecutor::test_calculate_indicators",
  "tests/test_strategy_executor.py::TestStrategyExecutor::test_evaluate_simple_condition",
  "tests/test_strategy_executor.py::TestStrategyExecutor::test_execute_buy_trade",
  "tests/test_strategy_executor.py::TestStrategyExecutor::test_execute_sell_trade",
  "tests/test_strategy_executor.py::TestStrategyExecutor::test_initialization",
  "tests/test_strategy_executor.py::TestStrategyExecutor::test_performance_metrics_calculation",
  "tests/test_strategy_executor.py::TestStrategyExecutor::test_reset",
  "tests/test_strategy_executor.py::TestStrategyExecutor::test_simple_strategy_backtest",
  "tests/test_strategy_executor.py::TestStrategyExecutor::test_update_equity",
  "tests/unit/test_backtest_api.py::TestBacktestAPI::test_delete_backtest_result_not_found",
  "tests/unit/test_backtest_api.py::TestBacktestAPI::test_delete_backtest_result_success",
  "tests/unit/test_backtest_api.py::TestBacktestAPI::test_get_backtest_result_by_id_not_found",
  "tests/unit/test_backtest_api.py::TestBacktestAPI::test_get_backtest_result_by_id_success",
  "tests/unit/test_backtest_api.py::TestBacktestAPI::test_get_backtest_results_success",
  "tests/unit/test_backtest_api.py::TestBacktestAPI::test_get_backtest_results_with_filters",
  "tests/unit/test_backtest_api.py::TestBacktestAPI::test_get_supported_strategies",
  "tests/unit/test_backtest_api.py::TestBacktestAPI::test_run_backtest_service_error",
  "tests/unit/test_backtest_api.py::TestBacktestAPI::test_run_backtest_success",
  "tests/unit/test_backtest_api.py::TestBacktestAPI::test_run_backtest_validation_error",
  "tests/unit/test_backtest_data_service.py::TestBacktestDataService::test_convert_ohlcv_data_to_dataframe",
  "tests/unit/test_backtest_data_service.py::TestBacktestDataService::test_dataframe_structure_validation",
  "tests/unit/test_backtest_data_service.py::TestBacktestDataService::test_get_ohlcv_for_backtest_data_sorting",
  "tests/unit/test_backtest_data_service.py::TestBacktestDataService::test_get_ohlcv_for_backtest_no_data",
  "tests/unit/test_backtest_data_service.py::TestBacktestDataService::test_get_ohlcv_for_backtest_repository_call",
  "tests/unit/test_backtest_data_service.py::TestBacktestDataService::test_get_ohlcv_for_backtest_success",
  "tests/unit/test_backtest_error_handling.py::TestBacktestErrorHandling::test_data_service_error_handling",
  "tests/unit/test_backtest_error_handling.py::TestBacktestErrorHandling::test_date_range_validation",
  "tests/unit/test_backtest_error_handling.py::TestBacktestErrorHandling::test_empty_data_handling",
  "tests/unit/test_backtest_error_handling.py::TestBacktestErrorHandling::test_insufficient_capital_handling",
  "tests/unit/test_backtest_error_handling.py::TestBacktestErrorHandling::test_invalid_commission_rate",
  "tests/unit/test_backtest_error_handling.py::TestBacktestErrorHandling::test_invalid_data_format",
  "tests/unit/test_backtest_error_handling.py::TestBacktestErrorHandling::test_invalid_strategy_config_structure",
  "tests/unit/test_backtest_error_handling.py::TestBacktestErrorHandling::test_invalid_timeframe_handling",
  "tests/unit/test_backtest_error_handling.py::TestBacktestErrorHandling::test_malformed_indicator_config",
  "tests/unit/test_backtest_error_handling.py::TestBacktestErrorHandling::test_memory_limit_handling",
  "tests/unit/test_backtest_error_handling.py::TestBacktestErrorHandling::test_negative_prices_handling",
  "tests/unit/test_backtest_models.py::TestBacktestResult::test_backtest_result_to_dict",
  "tests/unit/test_backtest_models.py::TestBacktestResult::test_create_backtest_result",
  "tests/unit/test_backtest_models.py::TestStrategyTemplate::test_create_strategy_template",
  "tests/unit/test_backtest_models.py::TestStrategyTemplate::test_strategy_template_to_dict",
  "tests/unit/test_backtest_models.py::TestStrategyTemplate::test_strategy_template_unique_name",
  "tests/unit/test_backtest_performance.py::TestBacktestPerformance::test_backtest_execution_time_large_dataset",
  "tests/unit/test_backtest_performance.py::TestBacktestPerformance::test_backtest_execution_time_small_dataset",
  "tests/unit/test_backtest_performance.py::TestBacktestPerformance::test_backtest_service_performance",
  "tests/unit/test_backtest_performance.py::TestBacktestPerformance::test_concurrent_backtest_execution",
  "tests/unit/test_backtest_performance.py::TestBacktestPerformance::test_memory_usage_during_backtest",
  "tests/unit/test_backtest_performance.py::TestBacktestPerformance::test_multiple_strategy_parameters_performance",
  "tests/unit/test_backtest_service.py::TestBacktestService::test_convert_backtest_results",
  "tests/unit/test_backtest_service.py::TestBacktestService::test_create_strategy_class_invalid_type",
  "tests/unit/test_backtest_service.py::TestBacktestService::test_create_strategy_class_sma_cross",
  "tests/unit/test_backtest_service.py::TestBacktestService::test_run_backtest_no_data_error",
  "tests/unit/test_backtest_service.py::TestBacktestService::test_run_backtest_success",
  "tests/unit/test_backtest_service.py::TestBacktestService::test_run_backtest_with_backtesting_py",
  "tests/unit/test_backtest_service.py::TestBacktestService::test_run_backtest_with_custom_strategy_parameters",
  "tests/unit/test_backtest_service.py::TestBacktestService::test_validate_backtest_config",
  "tests/unit/test_backtest_service.py::TestBacktestService::test_validate_backtest_config_invalid_capital",
  "tests/unit/test_backtest_service.py::TestBacktestService::test_validate_backtest_config_invalid_dates",
  "tests/unit/test_backtest_strategies.py::TestSMACrossStrategy::test_strategy_initialization",
  "tests/unit/test_backtest_strategies.py::TestSMACrossStrategy::test_strategy_parameter_validation",
  "tests/unit/test_backtest_strategies.py::TestSMACrossStrategy::test_strategy_signals_generation",
  "tests/unit/test_backtest_strategies.py::TestSMACrossStrategy::test_strategy_with_custom_parameters",
  "tests/unit/test_backtest_strategies.py::TestSMACrossStrategy::test_strategy_with_insufficient_data",
  "tests/unit/test_backtest_strategies.py::TestStrategyExecutor::test_executor_edge_cases",
  "tests/unit/test_backtest_strategies.py::TestStrategyExecutor::test_executor_initialization",
  "tests/unit/test_backtest_strategies.py::TestStrategyExecutor::test_executor_performance_metrics",
  "tests/unit/test_backtest_strategies.py::TestStrategyExecutor::test_executor_with_strategy_config",
  "tests/unit/test_bulk_collection.py::test_bulk_collection_logic",
  "tests/unit/test_data_collection_api.py::TestDataCollectionAPI::test_ethusd_symbol_handling",
  "tests/unit/test_data_collection_api.py::TestDataCollectionAPI::test_get_collection_status_auto_fetch",
  "tests/unit/test_data_collection_api.py::TestDataCollectionAPI::test_get_collection_status_invalid_symbol",
  "tests/unit/test_data_collection_api.py::TestDataCollectionAPI::test_get_collection_status_invalid_timeframe",
  "tests/unit/test_data_collection_api.py::TestDataCollectionAPI::test_get_collection_status_no_data_with_suggestion",
  "tests/unit/test_data_collection_api.py::TestDataCollectionAPI::test_get_collection_status_with_normalization",
  "tests/unit/test_data_collection_api.py::TestDataCollectionAPI::test_get_supported_symbols",
  "tests/unit/test_funding_rate_service.py::TestBybitFundingRateService::test_fetch_and_save_funding_rate_data_success",
  "tests/unit/test_funding_rate_service.py::TestBybitFundingRateService::test_fetch_and_save_with_database_error",
  "tests/unit/test_funding_rate_service.py::TestBybitFundingRateService::test_fetch_current_funding_rate_success",
  "tests/unit/test_funding_rate_service.py::TestBybitFundingRateService::test_fetch_current_funding_rate_with_ccxt_error",
  "tests/unit/test_funding_rate_service.py::TestBybitFundingRateService::test_fetch_funding_rate_history_success",
  "tests/unit/test_funding_rate_service.py::TestBybitFundingRateService::test_fetch_funding_rate_history_with_network_error",
  "tests/unit/test_funding_rate_service.py::TestBybitFundingRateService::test_normalize_symbol",
  "tests/unit/test_funding_rate_service.py::TestBybitFundingRateService::test_save_funding_rate_to_database",
  "tests/unit/test_funding_rate_service.py::TestBybitFundingRateService::test_service_initialization",
  "tests/unit/test_funding_rate_service.py::TestBybitFundingRateService::test_validate_parameters",
  "tests/unit/test_historical_data_service.py::TestHistoricalDataService::test_collect_historical_data_success",
  "tests/unit/test_historical_data_service.py::TestHistoricalDataService::test_collect_incremental_data_success",
  "tests/unit/test_indicators.py::TestTechnicalIndicators::test_bollinger_bands_calculation",
  "tests/unit/test_indicators.py::TestTechnicalIndicators::test_calculate_indicator_macd",
  "tests/unit/test_indicators.py::TestTechnicalIndicators::test_calculate_indicator_rsi",
  "tests/unit/test_indicators.py::TestTechnicalIndicators::test_calculate_indicator_sma",
  "tests/unit/test_indicators.py::TestTechnicalIndicators::test_macd_calculation",
  "tests/unit/test_indicators.py::TestTechnicalIndicators::test_rsi_calculation",
  "tests/unit/test_indicators.py::TestTechnicalIndicators::test_sma_calculation",
  "tests/unit/test_indicators.py::TestTechnicalIndicators::test_unsupported_indicator",
  "tests/unit/test_market_data_api.py::TestMarketDataAPI::test_api_cors_headers",
  "tests/unit/test_market_data_api.py::TestMarketDataAPI::test_api_error_handling",
  "tests/unit/test_market_data_api.py::TestMarketDataAPI::test_api_rate_limiting",
  "tests/unit/test_market_data_api.py::TestMarketDataAPI::test_api_response_format",
  "tests/unit/test_market_data_api.py::TestMarketDataAPI::test_get_ohlcv_data_invalid_symbol",
  "tests/unit/test_market_data_api.py::TestMarketDataAPI::test_get_ohlcv_data_missing_parameters",
  "tests/unit/test_market_data_api.py::TestMarketDataAPI::test_get_ohlcv_data_success",
  "tests/unit/test_market_data_api.py::TestMarketDataAPI::test_get_ohlcv_data_with_date_range",
  "tests/unit/test_market_data_api.py::TestMarketDataAPI::test_get_supported_symbols_success",
  "tests/unit/test_market_data_api.py::TestMarketDataAPI::test_get_supported_timeframes_success",
  "tests/unit/test_market_data_api.py::TestMarketDataAPI::test_health_check_success",
  "tests/unit/test_market_data_api.py::TestMarketDataAPI::test_save_ohlcv_data_success",
  "tests/unit/test_market_data_service.py::TestBybitMarketDataService::test_data_freshness",
  "tests/unit/test_market_data_service.py::TestBybitMarketDataService::test_fetch_ohlcv_data_invalid_limit",
  "tests/unit/test_market_data_service.py::TestBybitMarketDataService::test_fetch_ohlcv_data_invalid_symbol",
  "tests/unit/test_market_data_service.py::TestBybitMarketDataService::test_fetch_ohlcv_data_invalid_timeframe",
  "tests/unit/test_market_data_service.py::TestBybitMarketDataService::test_fetch_ohlcv_data_success",
  "tests/unit/test_market_data_service.py::TestBybitMarketDataService::test_network_error_handling",
  "tests/unit/test_market_data_service.py::TestBybitMarketDataService::test_service_initialization",
  "tests/unit/test_market_data_service.py::TestBybitMarketDataService::test_symbol_normalization",
  "tests/unit/test_market_data_service.py::TestBybitMarketDataServiceDatabaseIntegration::test_fetch_and_save_ohlcv_data_not_implemented",
  "tests/unit/test_market_data_service.py::TestBybitMarketDataServiceDatabaseIntegration::test_fetch_and_save_ohlcv_data_with_mock_repository",
  "tests/unit/test_market_data_service.py::TestBybitMarketDataServiceDatabaseIntegration::test_validate_symbol_implemented",
  "tests/unit/test_market_data_service.py::TestBybitMarketDataServiceDatabaseIntegration::test_validate_timeframe_implemented",
  "tests/unit/test_market_data_service.py::TestMarketDataConfig::test_default_symbol_is_btc_usdt",
  "tests/unit/test_market_data_service.py::TestMarketDataConfig::test_limit_validation",
  "tests/unit/test_market_data_service.py::TestMarketDataConfig::test_supported_symbols_contains_major_pairs",
  "tests/unit/test_market_data_service.py::TestMarketDataConfig::test_symbol_normalization",
  "tests/unit/test_market_data_service.py::TestMarketDataConfig::test_timeframe_validation",
  "tests/unit/test_ohlcv_repository.py::TestOHLCVRepository::test_get_ohlcv_data_basic",
  "tests/unit/test_ohlcv_repository.py::TestOHLCVRepository::test_get_ohlcv_data_database_error",
  "tests/unit/test_ohlcv_repository.py::TestOHLCVRepository::test_get_ohlcv_data_with_limit",
  "tests/unit/test_ohlcv_repository.py::TestOHLCVRepository::test_get_ohlcv_data_with_time_range",
  "tests/unit/test_ohlcv_repository.py::TestOHLCVRepository::test_insert_ohlcv_data_database_error",
  "tests/unit/test_ohlcv_repository.py::TestOHLCVRepository::test_insert_ohlcv_data_empty_list",
  "tests/unit/test_ohlcv_repository.py::TestOHLCVRepository::test_insert_ohlcv_data_success",
  "tests/unit/test_ohlcv_repository.py::TestOHLCVRepositoryIntegration::test_bulk_insert_performance_not_implemented",
  "tests/unit/test_ohlcv_repository.py::TestOHLCVRepositoryIntegration::test_duplicate_data_handling_not_implemented",
  "tests/unit/test_ohlcv_repository.py::TestOHLCVRepositoryIntegration::test_insert_and_retrieve_ohlcv_data_not_implemented",
  "tests/unit/test_ohlcv_repository.py::TestOHLCVRepositoryValidation::test_count_records_implemented",
  "tests/unit/test_ohlcv_repository.py::TestOHLCVRepositoryValidation::test_count_records_not_implemented",
  "tests/unit/test_ohlcv_repository.py::TestOHLCVRepositoryValidation::test_get_latest_timestamp_implemented",
  "tests/unit/test_ohlcv_repository.py::TestOHLCVRepositoryValidation::test_get_latest_timestamp_not_implemented",
  "tests/unit/test_ohlcv_repository.py::TestOHLCVRepositoryValidation::test_sanitize_ohlcv_data_implemented",
  "tests/unit/test_ohlcv_repository.py::TestOHLCVRepositoryValidation::test_sanitize_ohlcv_data_not_implemented",
  "tests/unit/test_ohlcv_repository.py::TestOHLCVRepositoryValidation::test_sanitize_ohlcv_data_string_timestamp",
  "tests/unit/test_ohlcv_repository.py::TestOHLCVRepositoryValidation::test_validate_ohlcv_data_invalid",
  "tests/unit/test_ohlcv_repository.py::TestOHLCVRepositoryValidation::test_validate_ohlcv_data_missing_fields",
  "tests/unit/test_ohlcv_repository.py::TestOHLCVRepositoryValidation::test_validate_ohlcv_data_not_implemented",
  "tests/unit/test_ohlcv_repository.py::TestOHLCVRepositoryValidation::test_validate_ohlcv_data_valid",
  "tests/unit/test_sma_cross_strategy.py::TestSMACrossStrategy::test_sma_calculation_with_real_data",
  "tests/unit/test_sma_cross_strategy.py::TestSMACrossStrategy::test_sma_function",
  "tests/unit/test_sma_cross_strategy.py::TestSMACrossStrategy::test_strategy_class_attributes",
  "tests/unit/test_sma_cross_strategy.py::TestSMACrossStrategy::test_strategy_init_method",
  "tests/unit/test_sma_cross_strategy.py::TestSMACrossStrategy::test_strategy_next_method_death_cross",
  "tests/unit/test_sma_cross_strategy.py::TestSMACrossStrategy::test_strategy_next_method_golden_cross",
  "tests/unit/test_sma_cross_strategy.py::TestSMACrossStrategy::test_strategy_next_method_no_cross",
  "tests/unit/test_sma_cross_strategy.py::TestSMACrossStrategy::test_strategy_parameter_customization",
  "tests/unit/test_sma_cross_strategy.py::TestSMACrossStrategy::test_strategy_with_insufficient_data",
  "tests/unit/test_strategy_executor.py::TestStrategyExecutor::test_calculate_indicators",
  "tests/unit/test_strategy_executor.py::TestStrategyExecutor::test_evaluate_simple_condition",
  "tests/unit/test_strategy_executor.py::TestStrategyExecutor::test_execute_buy_trade",
  "tests/unit/test_strategy_executor.py::TestStrategyExecutor::test_execute_sell_trade",
  "tests/unit/test_strategy_executor.py::TestStrategyExecutor::test_initialization",
  "tests/unit/test_strategy_executor.py::TestStrategyExecutor::test_performance_metrics_calculation",
  "tests/unit/test_strategy_executor.py::TestStrategyExecutor::test_reset",
  "tests/unit/test_strategy_executor.py::TestStrategyExecutor::test_simple_strategy_backtest",
  "tests/unit/test_strategy_executor.py::TestStrategyExecutor::test_update_equity"
]